agent:
  type: python
  name: arcops-cyber-student
  system_prompt: |
    You are the ArcOps-Cyber Student. Investigators provide an incident identifier (e.g., incident_5) with each question.
    Use the `secrl_sql` tool to query Microsoft SecRL ArcOps-Cyber telemetry when the context is insufficient. When you must identify the owner of a specific process, call `process_owner_lookup` instead of writing the query yourself.
    Requirements:
      • Every tool call must pass the correct incident database name (incident_{id}) and a SELECT-only statement. Use `%(param)s` placeholders with the `params` object instead of string interpolation.
      • Cite precise evidence from SQL results (table, row identifiers, key columns) in your answers. Mention when data is filtered or limited.
      • Never issue mutating statements (INSERT, UPDATE, DELETE, DROP, ALTER, etc.) or join across incidents.
      • If the context alone resolves the question, answer directly but confirm whether SQL verification was necessary.
      • When `process_owner_lookup` returns data, copy the exact `AccountName` value(s) from the tool output (see `account_names` / `account_summaries`) into your final answer. Do not fabricate or transform these values; if no rows are returned, state that explicitly.
    ArcOps-Cyber telemetry mirrors Microsoft Sentinel tables. Use `SHOW TABLES` / `DESCRIBE <table>` whenever you are unsure which schema to target.
    Device identifiers often appear as fully qualified hostnames (e.g., `vnevado-win11a.vnevado.alpineskihouse.co`). When filtering, use `DeviceName LIKE CONCAT(%(host)s, '.%')` (or equivalent) so you do not miss events tied to the host.
    The process-owner helper already applies the canonical filter (`DeviceName LIKE '<host>.%'`) and orders by `TimeGenerated DESC LIMIT 1`. Do not duplicate that query manually.
    If a query returns zero rows, report that outcome and request guidance—never fabricate an indicator. Your final answer must quote the exact `AccountName` value returned by SQL.
    Keep answers concise, investigator-facing, and reference all supporting indicators.
  import_path: atlas_core.tools.secrl_sql_adapter
  attribute: student_adapter
  tools:
  - name: secrl_sql
    description: Execute read-only SQL queries against the SecRL ArcOps-Cyber incident
      database to retrieve investigative evidence.
    parameters:
      type: object
      properties:
        incident_id:
          type: string
          description: Incident database name such as incident_5.
        sql:
          type: string
          description: SELECT statement scoped to the incident database. Use %(param)s
            placeholders where appropriate.
        params:
          type: object
          description: Optional mapping of placeholder names to values for the SQL
            query.
        limit:
          type: integer
          description: Maximum number of rows to retrieve (defaults to 200; capped
            at 500).
      required: [incident_id, sql]
      additionalProperties: false
  - name: process_owner_lookup
    description: Retrieve the most recent `DeviceProcessEvents` record for a host/process
      combination to identify the process owner exactly as defined in the SecRL ArcOps
      benchmark. The response includes `account_names`, `account_summaries`, and `instructions`
      that must be honoured verbatim.
    parameters:
      type: object
      properties:
        incident_id:
          type: string
          description: Incident database name such as incident_5.
        host:
          type: string
          description: Short Windows hostname (e.g., vnevado-win11a). The tool expands
            this to `DeviceName LIKE '<host>.%'`.
        process_id:
          anyOf:
          - type: integer
          - type: string
          description: Process identifier whose owner should be retrieved.
        file_name:
          type: string
          description: Optional executable name (e.g., notepad.exe) to disambiguate
            results when multiple processes share the PID.
        limit:
          type: integer
          description: Number of rows to return (defaults to 1; capped at 5).
      required: [incident_id, host, process_id]
      additionalProperties: false
  llm:
    provider: anthropic
    model: anthropic/claude-haiku-4-5
    api_key_env: ANTHROPIC_API_KEY
    temperature: 0.0
    max_output_tokens: 4096
    reasoning_effort:
    timeout_seconds: 120

teacher:
  llm:
    provider: openai
    model: xai/grok-4-fast
    api_key_env: XAI_API_KEY
    api_base: https://api.x.ai/v1
    temperature: 0.2
    max_output_tokens: 4096
    reasoning_effort:
    timeout_seconds: 360

rim:
  small_model:
    provider: gemini
    model: gemini/gemini-2.5-flash
    api_key_env: GEMINI_API_KEY
    max_output_tokens: 8192
    timeout_seconds: 120
  large_model:
    provider: gemini
    model: gemini/gemini-2.5-pro
    api_key_env: GEMINI_API_KEY
    max_output_tokens: 8192
    timeout_seconds: 120
  judge_prompt: Reward the agent for identifying the correct indicator based on the
    provided incident context.
  variance_threshold: 0.15
  uncertainty_threshold: 0.3

adaptive_teaching:
  enabled: true
  certify_first_run: true
  probe:
    fallback_mode: paired
    timeout_seconds: 30.0
    llm:
      provider: openai
      model: xai/grok-4-fast-non-reasoning
      api_key_env: XAI_API_KEY
      api_base: https://api.x.ai/v1
      temperature: 0.2
      timeout_seconds: 30.0
  reward:
    type: python
    import_path: atlas_core.reward.secrl_arcops
    attribute: build_reward
    parameters:
      llm:
        provider: gemini
        model: gemini/gemini-2.5-flash
        api_key_env: GEMINI_API_KEY
        max_output_tokens: 8192
        timeout_seconds: 120
      step_llm:
        provider: gemini
        model: gemini/gemini-2.5-pro
        api_key_env: GEMINI_API_KEY
        max_output_tokens: 8192
        timeout_seconds: 120
      step_check: true
      discount_factor: 0.4

storage:
  database_url: postgresql://atlas:atlas@localhost:5433/atlas
  min_connections: 1
  max_connections: 5
  statement_timeout_seconds: 30
