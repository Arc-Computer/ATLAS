defaults:
  - ../optimize/default

max_metric_calls: 5
capture_traces: true

agents:
  target:
    provider: python.callable
    params:
      module_path: "ITBench-SRE-Agent/src/lumyn/crew.py"
      module_base_path: "ITBench-SRE-Agent/src"
      class_name: "LumynCrew"
      function_name: "kickoff"
      process_input: "dict_wrapper"
      input_key: "alerts"
      process_response: "json"
      suppress_output: true
      capture_output_to_file: "traces/agent_execution.log"

max_examples: 1

data_source:
  type: itbench_scenarios
  scenarios_dir: ITBench-Scenarios/sre/roles/incidents/files

data:
  columns:
    question: "alerts"

seed_prompts:
  teacher_adaptive_template: |
    You are an adaptive teacher reviewing a student's SRE diagnostic approach.

    Incident Details: {question}

    Student Proposed Approach: {approach}

    Available Tools the Student Can Use:
    {available_tools}

    Your role is to ONLY correct mistakes and address misconceptions. DO NOT:
    - Praise correct steps or thinking
    - Restate what the student already knows
    - Provide unnecessary elaboration

    ONLY provide guidance if you identify:
    1. Missing critical investigation steps
    2. Wrong assumptions or misconceptions about the problem
    3. Inefficient tool usage when better alternatives exist
    4. Overlooked symptoms that could change the diagnosis
    5. Logical errors in their diagnostic reasoning

    If the student's approach is correct and complete, simply respond:
    <teaching>
    Everything looks good. Proceed with your approach.
    </teaching>

    If corrections are needed, be direct and specific:
    <teaching>
    [Only list the specific mistakes and corrections needed]
    </teaching>

  student_diagnostic_template: |
    You are an SRE agent investigating: {question}

    Provide your thinking and diagnostic plan:

    MY THINKING:
    - What I believe is happening based on the symptoms
    - Why I think this is the root cause
    - My hypothesis about the fault propagation chain
    - Assumptions I'm making about the system

    MY DIAGNOSTIC PLAN:
    - Step 1: [What to check] because [why this matters]
    - Step 2: [Next investigation] based on [expected finding]
    - Step 3: [Tool to use] to verify [hypothesis]

    TOOLS I WILL USE:
    - Which specific tools and why each is relevant
    - Expected outputs that would confirm/refute my hypothesis

    Share your reasoning so the teacher can guide your thought process, not just your actions.

  student_with_teaching_template: |
    You are an SRE agent investigating a production incident.

    {question}

    Your Initial Diagnostic Approach:
    {approach}

    Teacher Guidance:
    {teaching}

    Now execute your diagnostic approach with the Teacher corrections and guidance if any do not think directly go the implementation:
    - Use the diagnostic techniques suggested
    - Check for the specific issues mentioned
    - Follow the recommended investigation path
    - Ensure complete fault chain analysis

    Output a JSON diagnosis with this EXACT structure:
    ```json
    {{
      "entities": [
        {{"id": "entity_identifier", "root_cause": true/false}}
      ],
      "propagations": [
        {{"source": "source_entity", "target": "target_entity", "condition": "how it propagated", "effect": "what happened"}}
      ]
    }}
    ```

optimization_targets:
  teacher_adaptive_template:
    optimize: true
    reflection_goal: "Focus only on correcting mistakes and misconceptions, avoid praising correct steps"

  student_diagnostic_template:
    optimize: true
    reflection_goal: "Improve initial diagnostic approach for faster root cause discovery"

  student_with_teaching_template:
    optimize: true
    reflection_goal: "Better integrate teaching guidance to improve diagnosis accuracy"

reflection_instructions:
  teacher_adaptive_template: |
    OPTIMIZATION TARGET: teacher_adaptive_template
    GOAL: Create a teacher that ONLY corrects mistakes, never praises correct work

    CURRENT TEMPLATE:
    {current_template}

    ITERATION RESULTS:
    {performance_data}

    RIM EVALUATION ANALYSIS:
    Each sample includes RIM evaluation with:
    - rim_rewards: Scores for accuracy, helpfulness, process, diagnostic
    - rim_explanations: Principle-based reasoning for each score

    KEY PRINCIPLE: The teacher should be minimalist - only speak when there's an error to correct.

    INSTRUCTIONS:
    1. Review helpfulness scores - HIGH scores mean teacher correctly identified what needed fixing
    2. Look for cases where teacher gave unnecessary praise or elaboration (low helpfulness)
    3. Identify when teacher said "everything looks good" vs provided corrections
    4. Note if corrections were specific and actionable vs vague

    TASK: Generate an IMPROVED teaching template that:
    - ONLY provides feedback when student makes mistakes
    - Says "Everything looks good. Proceed." when approach is correct
    - Never praises, restates, or elaborates on correct thinking
    - Focuses purely on error correction and misconception addressing

    Return ONLY the improved template text, maintaining {question} and {approach} placeholders.

  student_diagnostic_template: |
    OPTIMIZATION TARGET: student_diagnostic_template
    GOAL: Improve initial diagnostic approach for SRE incidents

    CURRENT TEMPLATE:
    {current_template}

    ITERATION RESULTS:
    {performance_data}

    RIM EVALUATION ANALYSIS:
    Each sample includes RIM evaluation with:
    - rim_rewards: Scores for accuracy, helpfulness, process, diagnostic
    - rim_explanations: Principle-based reasoning for each score

    INSTRUCTIONS:
    1. Review RIM explanations for process scores
    2. Identify which principles for plan quality are violated
    3. Find patterns: What aspects of diagnostic approach led to low process scores?
    4. Note which principles were satisfied in high-scoring diagnostic approaches

    TASK: Generate an IMPROVED diagnostic template that:
    - Addresses process principle violations identified by RIM
    - Ensures diagnostic approach satisfies RIM's evaluation principles
    - Leads to higher process scores by meeting principle requirements

    Return ONLY the improved template text, maintaining {question} placeholder.

  student_with_teaching_template: |
    OPTIMIZATION TARGET: student_with_teaching_template
    GOAL: Improve how teaching is integrated into student response

    CURRENT TEMPLATE:
    {current_template}

    ITERATION RESULTS:
    {performance_data}

    RIM EVALUATION ANALYSIS:
    Each sample includes RIM evaluation with:
    - rim_rewards: Scores for accuracy, helpfulness, process, diagnostic
    - rim_explanations: Principle-based reasoning for each score

    INSTRUCTIONS:
    1. Review RIM explanations for accuracy and helpfulness scores
    2. Identify cases where teaching was provided but not effectively applied
    3. Find patterns: Why did some students integrate teaching better than others?
    4. Note which principles were satisfied when teaching was well-integrated

    TASK: Generate an IMPROVED template that:
    - Addresses principle violations in how teaching is applied
    - Ensures student effectively integrates teacher guidance
    - Leads to higher accuracy and helpfulness scores

    Return ONLY the improved template text, maintaining {question} and {teaching} placeholders.


trace_storage: traces/itbench_traces.jsonl
output: traces/itbench_optimized.json


compatibility_mode: true

gepa_config:
  reflection_minibatch_size: 1
  candidate_selection_strategy: pareto
  skip_perfect_score: false
  perfect_score: 1.0
  module_selector: all