# Test YOUR existing agent with ATLAS teaching

# Your agent configuration
user_agent:
  type: custom
  config:
    # Choose ONE integration method:

    # HTTP API
    integration_type: http_api
    endpoint: "http://localhost:8000/chat"
    prompt_field: "message"
    response_field: "response"
    request_template:
      message: ""  # Will be filled with prompt
      # Add other fields your API expects
    headers:
      Authorization: "Bearer YOUR_KEY"
    timeout: 30

    # Python Function
    # integration_type: python_function
    # module_path: "/path/to/your/agent.py"
    # function_name: "generate"

    # CLI Command
    # integration_type: cli_command
    # command: "python agent.py '{prompt}'"

# ATLAS teacher (optimized for teaching)
teacher_model: Arc-Intelligence/ATLAS-8B-Thinking

# Dataset to test on
trainset: arc-atlas-rl
max_examples: 10

# Compatibility mode settings
compatibility_mode: true

# Teaching optimization
max_metric_calls: 100
reflection_lm: gpt-4

generation_config:
  max_tokens: 2048
  temperature: 0.7
  timeout: 300

gepa_config:
  candidate_selection_strategy: pareto
  reflection_minibatch_size: 5
  display_progress_bar: true